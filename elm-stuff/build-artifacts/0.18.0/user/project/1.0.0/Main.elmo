var _user$project$Main$view = function (angle) {
	return A2(
		_elm_community$webgl$WebGL$toHtml,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$width(300),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$height(300),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		},
		{
			ctor: '::',
			_0: A4(
				_elm_community$webgl$WebGL$entity,
				_user$project$Shaders$vertexShader,
				_user$project$Shaders$fragmentShader,
				_user$project$Meshes$simpleTriangle,
				{
					rotation: A2(
						_elm_community$linear_algebra$Math_Matrix4$makeRotate,
						0,
						A3(_elm_community$linear_algebra$Math_Vector3$vec3, 0, 1, 0))
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$Main$initialModel = {};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
var _user$project$Main$Model = {};
var _user$project$Main$NoOp = {ctor: 'NoOp'};
